@model MVC_2.Models.BooksIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Books" asp-action="Index">
    <p>
        Title: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
<div class="d-flex justify-content-between w-100">
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a title="Back" asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumber - 1)" class="btn btn-outline-info">
            <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-arrow-left-square-fill" viewBox="0 0 16 16">
                <path d="M16 14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12zm-4.5-6.5H5.707l2.147-2.146a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708-.708L5.707 8.5H11.5a.5.5 0 0 0 0-1z" />
            </svg>

        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a title="Forward" asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumber + 1)" class="btn btn-outline-info">

            <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-arrow-right-square-fill" viewBox="0 0 16 16">
                <path d="M0 14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v12zm4.5-6.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5a.5.5 0 0 1 0-1z" />
            </svg>
        </a>
    }
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumber)" asp-route-sortOrder="@ViewBag.TitleSort">@Html.DisplayNameFor(model => model.Books.First().Title)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books.First().ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books.First().Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books.First().Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books.First().AgeCategory)
            </th>
            <th>
                <a asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumber)" asp-route-sortOrder="@ViewBag.RatingSort">@Html.DisplayNameFor(model => model.Books.First().Rating)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Book item in Model.Books)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Publisher)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AgeCategory)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


